---
- name: Import repositories GPG keys
  become: true
  rpm_key:
    state: present
    key: "{{ item.gpg_url }}"
  loop: "{{ fedora_repositories }}"

- name: Add repositories
  become: true
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.url }}"
    gpgkey: "{{ item.gpg_url }}"
    gpgcheck: "{{ item.gpg_check | bool }}"
    enabled: yes
  loop: "{{ fedora_repositories }}"

- name: Import RPM Fusion Free GPG key
  become: true
  rpm_key:
    state: present
    key: https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-{{ ansible_distribution | lower }}-2020

- name: Install RPM Fusion Free
  become: true
  dnf:
    name: https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ansible_distribution_major_version}}.noarch.rpm
    state: present

- name: Add copr repositories
  become: yes
  shell: dnf copr enable {{ item.name }} -y
  args:
    creates: /etc/yum.repos.d/{{ item.creates }}
  loop: "{{ copr_repositories }}"

- name: Install command line tools in Fedora
  become: true
  dnf:
    name:
      - alacritty
      - autorandr
      - bat
      - chromium
      - conky
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - dunst
      - eza
      - fd-find
      - feh
      - firefox
      - fish
      - fzf
      - golang
      - golang-x-tools-gopls
      - helm
      - htop
      - i3
      - ImageMagick
      - jq
      - keepassxc
      - kubectl
      - neofetch
      - neovim 
      - picom
      - polybar
      - python3-pip
      - ripgrep
      - rofi
      - rust
      - rustfmt
      - starship
      - sublime-text
      - terraform
      - tig
      - tmux
      - unzip
      - xclip
    state: present

# Docker
# Add user to docker group
- name: Add user to docker group
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

# Fish Shell
# Fisher - https://github.com/jorgebucaran/fisher
- name: Install fisher
  shell: curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
  args:
    creates: ~/.config/fish/functions/fisher.fish
    executable: fish

- name: Set default shell to fish
  become: yes
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/fish

- name: Install fish plugins
  shell: fisher install {{ item }}
  args:
    executable: /usr/bin/fish
  loop:
    - gazorby/fish-abbreviation-tips
    - jethrokuan/z
    - jorgebucaran/nvm.fish
    - PatrickF1/fzf.fish

# Python / pip / uv
- name: Install pip packages
  become: yes
  pip:
    name: "{{ item }}"
    executable: pip3
  loop:
    - files-to-prompt   # https://github.com/simonw/files-to-prompt
    - llm               # https://github.com/simonw/llm
    - pywal             # https://github.com/dylanaraps/pywal
    - strip-tags        # https://github.com/simonw/strip-tags
    - virtualfish       # https://github.com/justinmayer/virtualfish
    - yt-dlp            # https://github.com/yt-dlp/yt-dlp

# NodeJS
- name: Install node
  shell: nvm install {{ item }}
  args:
    executable: /usr/bin/fish
  loop:
    - 18.16.0
    - latest

# AWS CLI
- name: Download AWS CLI
  get_url: url=https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip dest=/tmp/awscliv2.zip
  register: aws_cli_download

- name: Unarchive AWS CLI Installer
  unarchive: src=/tmp/awscliv2.zip dest=/tmp copy=no creates=/tmp/aws
  when: aws_cli_download.changed
  register: aws_cli_unarchive

- name: Install AWS CLI
  become: yes
  shell: /tmp/aws/install --update
  args:
    creates: /usr/local/bin/aws
  when: aws_cli_unarchive.changed

# LLM CLI
- name: Install additional llm models
  shell: llm install {{ item }}
  args:
    executable: /usr/bin/fish
  loop:
    - llm-claude-3 # llm keys set claude
    - llm-gemini # llm keys set gemini
    - llm-openrouter # llm keys set openrouter
